// Generated by CoffeeScript 1.3.3
(function() {
  var Detector;

  P.Detector = {};

  Detector = (function() {

    function Detector() {
      this.mobile = false;
      this.iPhone = false;
      this.iPad = false;
      this.iOS = false;
      this.android = false;
      this.winphone = false;
      this.desktop = false;
      this.chrome = false;
      this.firefox = false;
      this.ie = false;
      this.safari = false;
      this.opera = false;
      this.windows = false;
      this.mac = false;
      this.linux = false;
      this.canPlayHTML5Audio = false;
      this.audio = {};
      this.preferedAudioFormat = false;
      this.webworker = false;
      this.detectWebWorker();
      this.detectMobile();
      if (this.mobile === false) {
        this.detectBrowser();
        this.detectOS();
      }
      this.detectAudio();
    }

    Detector.prototype.detectAudio = function() {
      var userAudio;
      userAudio = document.createElement('audio');
      if (!!userAudio.canPlayType) {
        this.canPlayHTML5Audio = true;
        this.audio.mp3 = !!(userAudio.canPlayType && userAudio.canPlayType("audio/mpeg;").replace(/no/, ""));
        this.audio.ogg = !!(userAudio.canPlayType && userAudio.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/no/, ""));
        this.audio.aac = !!(userAudio.canPlayType && userAudio.canPlayType("audio/mp4; codecs=\"mp4a.40.2\"").replace(/no/, ""));
        if (this.audio.ogg && !this.audio.mp3) {
          return this.preferedAudioFormat = 'ogg';
        } else if (this.audio.mp3 && !this.audio.ogg) {
          return this.preferedAudioFormat = 'mp3';
        } else if (this.audio.mp3 && this.audio.ogg) {
          return this.preferedAudioFormat = 'ogg';
        }
      }
    };

    Detector.prototype.detectBrowser = function() {
      var browsers, key, _results;
      browsers = {
        "chrome": {
          subString: "Chrome"
        },
        "firefox": {
          subString: "Firefox"
        },
        "safari": {
          subString: "Apple"
        },
        "ie": {
          subString: "MSIE"
        }
      };
      if (window.opera) {
        this.opera = true;
      }
      _results = [];
      for (key in browsers) {
        if (navigator.userAgent.indexOf(browsers[key].subString) !== -1) {
          this.desktop = true;
          if (key === "chrome") {
            _results.push(this.chrome = true);
          } else if (key === "firefox") {
            _results.push(this.firefox = true);
          } else if (key === "safari") {
            _results.push(this.safari = true);
          } else if (key === "ie") {
            _results.push(this.ie = true);
          } else {
            _results.push(void 0);
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Detector.prototype.detectMobile = function() {
      var key, platforms, _results;
      platforms = {
        "iphone": {
          subString: "iPhone"
        },
        "ipad": {
          subString: "iPad"
        },
        "android": {
          subString: "Android"
        },
        "winphone": {
          subString: "Windows Phone"
        }
      };
      _results = [];
      for (key in platforms) {
        if (navigator.userAgent.indexOf(platforms[key].subString) !== -1) {
          this.mobile = true;
          if (key === "iphone") {
            _results.push(this.iPhone = true && (this.iOS = true));
          } else if (key === "ipad") {
            _results.push(this.iPad = true && (this.iOS = true));
          } else if (key === "android") {
            _results.push(this.android = true);
          } else if (key === "winphone") {
            _results.push(this.winphone = true);
          } else {
            _results.push(void 0);
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Detector.prototype.detectOS = function() {
      var key, os, _results;
      os = {
        "windows": {
          subString: "Win"
        },
        "mac": {
          subString: "Mac"
        },
        "linux": {
          subString: "Linux"
        }
      };
      _results = [];
      for (key in os) {
        if (navigator.userAgent.indexOf(os[key].subString) !== -1) {
          if (key === "windows") {
            _results.push(this.windows = true);
          } else if (key === "mac") {
            _results.push(this.mac = true);
          } else if (key === "linux") {
            _results.push(this.linux = true);
          } else {
            _results.push(void 0);
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Detector.prototype.detectWebWorker = function() {
      return this.webworker = !!window.Worker;
    };

    return Detector;

  })();

  P.Detector = Detector;

}).call(this);
