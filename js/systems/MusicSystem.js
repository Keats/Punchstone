// Generated by CoffeeScript 1.3.3
(function() {
  var MusicSystem,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  P.systems.MusicSystem = {};

  MusicSystem = (function(_super) {

    __extends(MusicSystem, _super);

    function MusicSystem() {
      MusicSystem.__super__.constructor.call(this, "Music");
      this.currentMusicName = "";
      this.currentMusicObject = null;
    }

    MusicSystem.prototype.initialize = function() {
      return this.musicMapper = new P.Artemis.ComponentMapper("Music", this.world);
    };

    MusicSystem.prototype.processEntity = function(entity) {
      var music;
      music = this.musicMapper.get(entity);
      if (this.currentMusicName !== music.name || "") {
        this.fadeOutInterval = this.fadeOut(this.currentMusicObject);
        if (this.fadeInInterval) {
          clearInterval(this.fadeInInterval);
        }
        if (this.fadeOutInterval) {
          clearInterval(this.fadeOutInterval);
        }
        return this.playWithFadeIn(music);
      }
    };

    MusicSystem.prototype.added = function(entity) {
      var music;
      music = this.musicMapper.get(entity);
      return this.playWithFadeIn(music);
    };

    MusicSystem.prototype.playWithFadeIn = function(music) {
      var musicObject;
      musicObject = P.scene.loadedAssets.sounds[music.name];
      this.currentMusicName = music.name;
      this.currentMusicObject = musicObject;
      musicObject.volume = 0;
      musicObject.loop = true;
      this.fadeInInterval = this.fadeIn(musicObject);
      return musicObject.play();
      /*
          musicObject.addEventListener "ended", =>
            if intervalId
              clearInterval(intervalId)
              intervalId = null
            musicObject.play()
          , false
      */

    };

    MusicSystem.prototype.fadeIn = function(music) {
      var _this = this;
      return setInterval(function() {
        var step, volume;
        step = 0.02;
        volume = music.volume + step;
        if (volume < 1 - step) {
          return music.volume = volume;
        } else {
          return music.volume = 1;
        }
      }, 30);
    };

    MusicSystem.prototype.fadeOut = function(music) {
      var _this = this;
      return setInterval(function() {
        var step, volume;
        step = 0.02;
        volume = music.volume - step;
        if (volume >= step) {
          return music.volume = volume;
        } else {
          return music.volume = 0;
        }
      }, 30);
    };

    return MusicSystem;

  })(P.Artemis.EntityProcessingSystem);

  P.systems.MusicSystem = MusicSystem;

}).call(this);
