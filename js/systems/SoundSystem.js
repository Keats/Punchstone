// Generated by CoffeeScript 1.3.3
(function() {
  var SoundSystem,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  P.systems.SoundSystem = {};

  SoundSystem = (function(_super) {

    __extends(SoundSystem, _super);

    function SoundSystem() {
      SoundSystem.__super__.constructor.call(this, "Sound");
      this.sounds = {};
      this.channels = 4;
      this.indexes = {};
    }

    SoundSystem.prototype.initialize = function() {
      return this.soundMapper = new P.Artemis.ComponentMapper("Sound", this.world);
    };

    SoundSystem.prototype.processEntity = function(entity) {
      return this.world.deleteEntity(entity);
    };

    SoundSystem.prototype.added = function(entity) {
      var channel, name, sound, soundToPlay, _i, _ref;
      sound = this.soundMapper.get(entity);
      name = sound.name;
      console.log('la');
      if (!(name in this.sounds)) {
        this.sounds[name] = [];
        this.indexes[name] = 0;
        for (channel = _i = _ref = this.channels; _ref <= 1 ? _i <= 1 : _i >= 1; channel = _ref <= 1 ? ++_i : --_i) {
          this.sounds[name].push(P.scene.loadedAssets.sounds[name].cloneNode(true));
        }
      }
      soundToPlay = this.sounds[name][this.indexes[name]];
      console.log('should play');
      soundToPlay.play();
      return this.indexes[name] = (this.indexes[name] + 1) % this.sounds[name].length;
    };

    return SoundSystem;

  })(P.Artemis.EntityProcessingSystem);

  P.systems.SoundSystem = SoundSystem;

}).call(this);
